[tool.poetry]
name = "qgis_dataset_qa_workbench"
version = "0.7.1"
description = "A QGIS3 plugin for assisting in dataset quality assurance workflows"
authors = ["Ricardo Garcia Silva <ricardo@kartoza.com>"]
readme = "README.md"
license = "GPL-3.0-only"

[tool.poetry.dependencies]
python = "^3.8"
jsonschema = "^3.2.0"
typer = "^0.3.2"
pytest = "^6.0.2"
pytest-qt = "^3.3.0"
ipython = "^7.18.1"
toml = "^0.10.1"

[tool.poetry.dev-dependencies]

[tool.qgis-plugin.dev]
profile = "default"

[tool.qgis-plugin.metadata]
name = "Dataset QA Workbench"
qgisMinimumVersion = "3.10"
icon = "clipboard-check-solid.svg"
experimental = "True"
deprecated = "False"
homepage = "https://github.com/kartoza/qgis_dataset_qa_workbench"
tracker = "https://github.com/kartoza/qgis_dataset_qa_workbench/issues"
repository = "https://github.com/kartoza/qgis_dataset_qa_workbench"
tags = [
    "qa",
    "qc",
    "quality",
    "assurance",
    "control",
    "checklist",
    "check",
    "validate",
]
category = "plugins"
hasProcessingProvider = "yes"
# about: dynamically pulled from the README.md file
# changelog: dynamically pulled from the README.md file
# description: dynamically pulled from the tool.poetry.description section
# version: dynamically pulled from the tool.poetry.version section
# author: dynamically pulled from the tool.poetry.authors section
# email: dynamically pulled from the tool.poetry.authors section
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"


